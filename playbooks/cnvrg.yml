- hosts: localhost
  gather_facts: no
  tasks:
    - name: "Include vars"
      include_vars: "{{ item }}"
      with_items:
        - vars/globals.yml
        - ../roles/conf/vars/main.yml
        - ../roles/redis/vars/main.yml
        - ../roles/pg/vars/main.yml
        - ../roles/pg_backup/vars/main.yml
        - ../roles/es/vars/main.yml
        - ../roles/minio/vars/main.yml
        - ../roles/monitoring/vars/main.yml
        - ../roles/istio/vars/main.yml
        - ../roles/kibana/vars/main.yml
        - ../roles/fluentd/vars/main.yml
        - ../roles/nvidiadp/vars/main.yml
        - ../roles/mpi/vars/main.yml
        - ../roles/app/vars/main.yml
        - ../roles/nfs/vars/main.yml
        - ../roles/hostpath/vars/main.yml
        - ../roles/ingress/vars/main.yml
        - ../roles/cnvrg_router/vars/main.yml
      tags: always


    - name: Deploy cnvrg stack
      block:

      # CnvrgApp deployment
      - import_role:
          name: app
          tasks_from: install.yml
        when:
        - cnvrgApp.enabled == "true"
        tags: app

      # Cnvrg Nginx Router
      - import_role:
          name: cnvrg_router
        when:
        - cnvrgRouter.enabled == "true"
        tags: cnvrgRouter

      # NFS provisioner deployment
      - import_role:
          name: nfs
        when:
        - nfs.enabled == "true"
        tags: nfs

      # Hostpath provisioner deployment
      - import_role:
          name: hostpath
        when:
        - hostpath.enabled == "true"
        tags: hostpath

      # Configuration deployment
      - import_role:
          name: conf
        when:
        - conf.enabled == "true"
        tags: conf

      # Postgres deployment
      - import_role:
          name: pg
        when:
        - pg.enabled == "true"
        tags: pg

      # Postgres deployment
      - import_role:
          name: pg_backup
        when:
        - pg_backup.enabled == "true"
        tags: pg_backup

      # Redis deployment
      - import_role:
          name: redis
        when:
        - redis.enabled == "true"
        tags: redis

      # ElasticSearch deployment
      - import_role:
          name: es
        when:
        - es.enabled == "true"
        tags: es

      # ElastAlert deployment
      - import_role:
          name: elastalert
        when:
        - elastalert.enabled == "true"
        tags: elastalert

      # Minio deployment
      - import_role:
          name: minio
        when:
        - minio.enabled == "true"
        tags: minio

      # Fluentd deployment
      - import_role:
          name: fluentd
        when:
        - fluentd.enabled == "true"
        tags: fluentd

      # Istio deployment
      - import_role:
          name: istio
        vars:
          roleState: "present"
        when:
        - istio.enabled == "true"
        tags: istio

      # Kibana deployment
      - import_role:
          name: kibana
        when:
        - kibana.enabled == "true"
        tags: kibana

      # Nvidia device plugin
      - import_role:
          name: nvidiadp
        when:
        - nvidiadp.enabled == "true"
        tags: nvidiadp

      # MPI deployment
      - import_role:
          name: mpi
        when:
        - mpi.enabled == "true"
        tags: mpi

      # Ingress rules deployment
      - import_role:
          name: ingress
        when:
        - ingress.enabled == 'true'
        tags: ingress

      # Monitoring
      - import_role:
          name: monitoring
        when:
        - monitoring.enabled == "true"
        tags: monitoring

      # vpa deployment
      - import_role:
          name: vpa
        when:
        - vpa.enabled == "true"
        tags: vpa

      when:
      - opsDecree == "start"