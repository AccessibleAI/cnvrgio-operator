- name: "Get postgres-backrest-repo-config secret"
  k8s_info:
    kind: Secret
    namespace: "{{ansible_operator_meta.namespace}}"
    name: "postgres-backrest-repo-configs"
  register: postgres_backrest

- debug: var=postgres_backrest.resources
  when: postgres_backrest.resources | length > 0

- name: Create ssh keys for pgbackrest
  block:
  - name: check if key-pair exists
    command: "ls /tmp/{{ pg_ha.cluster_name }}"
    ignore_errors: True
    register: file

  - name: generate SSH key
    openssh_keypair:
      path: "/tmp/{{ pg_ha.cluster_name }}"
      type: ed25519
      state: present
    when: file.rc != 0

  - name: "Get pub key"
    shell: cat /tmp/{{ pg_ha.cluster_name }}.pub | base64
    register: pgbackrest_public_key

  - name: "Get private key"
    shell: cat /tmp/{{ pg_ha.cluster_name }} | base64
    register: pgbackrest_private_key

  when:
  - role_state == "present"
  - dry_run == "false"
  - postgres_backrest.resources | length == 0

# Install  PG
- name: Install Postgres
  include_role:
    name: common
    tasks_from: install
  vars:
    template_path: "{{ item }}"
    state: "{{ role_state }}"
  with_items:
  - templates/cm.yml
  - templates/rbac.yml
  - templates/job.yml
  - templates/prereq_secrets.yml
  - templates/cm_custom_config.yml
  - templates/pgo_client.yml

- name: Pause for CRD
  pause:
    seconds: 5

- name: Install Postgres CR
  include_role:
    name: common
    tasks_from: install
  vars:
    template_path: "{{ item }}"
    state: "{{ role_state }}"
  with_items:
  - templates/pg_cluster_cr.yml
  - templates/pg_replica_cr.yml
  - templates/cm_backup.yml
