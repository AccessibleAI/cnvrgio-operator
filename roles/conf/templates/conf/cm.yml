#jinja2: trim_blocks: "true", lstrip_blocks: "false"
apiVersion: v1
kind: ConfigMap
metadata:
  name: env-config
  namespace: "{{ ansible_operator_meta.namespace }}"
data:
  {% if cnvrgApp.customAgentTag != "false" %}
  AGENT_CUSTOM_TAG: "{{ cnvrgApp.customAgentTag }}" # Image.where(name:"cnvrg_cli").update_all(tag:$cnvrg["agent_custom_tag"])
  {% endif %}
  ELASTICSEARCH_URL: "http://{{es.svcName}}"
  ELASTICSEARCH_URL: "http://{{es.svcName}}"
  HYPER_SERVER_URL: "http://{{hyper.svcName}}"
  HYPER_SERVER_PORT: "{{hyper.port}}"
  HYPER_SERVER_TOKEN: "{{hyper.token}}"
  KUBE_NAMESPACE: "{{ ansible_operator_meta.namespace }}"
  SHOW_INTERCOM:  "{{ cnvrgApp.intercom }}"
  ROUTE_BY_ISTIO: "{{ ('true' if ingressType == 'istio' else 'false') }}"
  ROUTE_BY_OPENSHIFT: "{{ ('true' if ingressType == 'openshift' else 'false') }}"
  ROUTE_BY_NGINX_INGRESS: "{{ ('true' if ingressType == 'k8singress' else 'false') }}"
  ROUTE_BY_NODE_PORT: "{{ ('true' if ingressType == 'nodeport' else 'false') }}"
  CNVRG_STORAGE_USE_IAM_ROLE: "false"
  {% if conf.defaultJobsStorageClass == "" %}
  {% if nfs.enabled == "true" %}
  CNVRG_JOBS_STORAGECLASS: "{{ nfs.storageClassName }}"
  {% endif %}
  {% if hostpath.enabled == "true" %}
  CNVRG_JOBS_STORAGECLASS: "{{ hostpath.storageClassName }}"
  {% endif %}
  {% else %}
  CNVRG_JOBS_STORAGECLASS: "{{ conf.defaultJobsStorageClass }}"
  {% endif %}


  SMTP_SERVER: "{{ appConfigs.smtp.server }}"
  SMTP_PORT: "{{ appConfigs.smtp.port }}"
  SMTP_USERNAME: "{{ appConfigs.smtp.username }}"
  SMTP_PASSWORD: "{{ appConfigs.smtp.password }}"
  SMTP_DOMAIN: "{{ appConfigs.smtp.domain }}"
  {% if cnvrgRouter.enabled == "true" %}
  DEPLOY_URL: "{{ (httpScheme + (cnvrgRouter.svcName + '.' if ingressType != 'nodeport' else '')  + clusterDomain + (':'+cnvrgRouter.nodePort|string if ingressType == 'nodeport' else ''))}}"
  NOTEBOOK_URL: "{{ (httpScheme + (cnvrgRouter.svcName + '.' if ingressType != 'nodeport' else '')  + clusterDomain + (':'+cnvrgRouter.nodePort|string if ingressType == 'nodeport' else ''))}}"
  TENSORBOARD_URL: "{{ (httpScheme + (cnvrgRouter.svcName + '.' if ingressType != 'nodeport' else '')  + clusterDomain + (':'+cnvrgRouter.nodePort|string if ingressType == 'nodeport' else ''))}}"
  {% endif %}
{% set featureFlags = appConfigs.featureFlags.split(';') %}
{% for featureFlag in featureFlags %}
  {% set flagsItmes = featureFlag.split("=") %}
    {% if flagsItmes|length >= 2 %}
  {{ flagsItmes[0] }}: "{{ flagsItmes[1:]|join("=") }}"
    {% endif %}
{% endfor %}


