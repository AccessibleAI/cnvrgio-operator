apiVersion: batch/v1
kind: Job
metadata:
  name: ilm-config
  namespace: "{{ ansible_operator_meta.namespace }}"
spec:
  template:
    spec:
{% if hostpath.enabled == "true" and tenancy.enabled == "false" %}
      nodeSelector:
        kubernetes.io/hostname: "{{ hostpath.node_name }}"
{% endif %}
{% if hostpath.enabled == "true" and tenancy.enabled == "true" %}
      nodeSelector:
        kubernetes.io/hostname: "{{ hostpath.node_name }}"
        {{ tenancy.cnvrg.key }}: "{{ tenancy.cnvrg.value }}"
{% endif %}
{%  if tenancy.enabled == "true" and tenancy.dedicated_nodes == "true" %}
      tolerations:
      - key: "{{ tenancy.cnvrg.key }}"
        operator: "Equal"
        value: "{{ tenancy.cnvrg.value }}"
        effect: "NoSchedule"
{% endif %}
      serviceAccountName: "{{rbac.service_account_name}}"
      containers:
      - name: ilm-mapping
        image: {{ es.max_map_image }}
        command: [ "/bin/bash","/tmp/ilm_mapping.sh"]
        volumeMounts:
          - name: ilm-config
            mountPath: /tmp
      volumes:
      - name: ilm-config
        configMap:
          name: ilm-config
      restartPolicy: Never