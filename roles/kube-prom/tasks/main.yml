- name: Kube-Prom deployment
  vars:
    resources: |+
      {% if alertmanager.enabled == 'true' %}
      {{ lookup('fileglob','templates/kube-prom/*',wantlist=true) | reject('search','prometheus-adapter') |  reject('search','alertmanager-secret')  |  list }}
      {% else %}
      {{ lookup('fileglob','templates/kube-prom/*',wantlist=true) | reject('search','prometheus-adapter') | reject('search','alertmanager') |  list }}
      {% endif %}
  block:

    # is state present, create crds in first step
    - name: Install Kube-Prometheus CRDs
      include_role:
        name: common
        tasks_from: install
      vars:
        template_path: "{{ item }}"
        state: "{{ role_state }}"
      with_fileglob:
        - templates/kube-prom/setup/*
      when: role_state == "present"

    - name: Install Kube-Prometheus resources
      include_role:
        name: common
        tasks_from: install
      vars:
        template_path: "{{ item }}"
        state: "{{ role_state }}"
      loop: "{{resources}}"
      when: role_state == "present"

    - name: Alertmanager Secret
      k8s_info:
        api_version: v1
        kind: Secret
        namespace: "{{ ansible_operator_meta.namespace }}"
        name: "{{ alertmanager.svc_name }}"
      register: alertmanager_secret
      when:
      - role_state == "present"
      - dry_run == "false"

    - name: Install Alertmanager Secret if doesnt exist
      include_role:
        name: common
        tasks_from: install
      vars:
        template_path: "templates/kube-prom/alertmanager-secret.yaml"
        state: "{{ role_state }}"
      when:
      - role_state == "present"
      - alertmanager_secret.resources | length == 0

    - name: Get Prometheus
      k8s_info:
        api_version: monitoring.coreos.com/v1
        kind: Prometheus
        namespace: "{{ ansible_operator_meta.namespace }}"
      register: prometheus_instance
      when:
      - dry_run == "false"
      - role_state == "absent"

    - name: Print Prometheus instance
      debug:
        msg: "Current Prometheus instances: {{ prometheus_instance.resources }}"
      when:
      - dry_run == "false"
      - role_state == "absent"

    - name: Remove Kube-Prometheus resources
      include_role:
        name: common
        tasks_from: install
      vars:
        template_path: "{{ item }}"
        state: "{{ role_state }}"
      loop: "{{resources}}"
      when:
      - role_state == "absent"
      - prometheus_instance.resources | length > 0

    # is state absent, remove crds in last step
    - name: Remove Kube-Prometheus CRDs
      include_role:
        name: common
        tasks_from: install
      vars:
        template_path: "{{ item }}"
        state: "{{ role_state }}"
      loop: "{{crds}}"
      when: state == "absent"




