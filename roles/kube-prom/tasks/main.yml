- name: Kube-Prom deployment
  vars:
    resources: |+
      {{ lookup('fileglob','templates/kube-prom/*',wantlist=true) | reject('search','prometheus-adapter') | reject('search','alertmanager') |  list }}
  block:
    - set_fact:
        resources: "{{ resources |  reject('search','sidekiq') | reject('search','minio') | reject('search','postgres') | list  }}"
      when: cnvrg_app.enabled == "false"
    - set_fact:
        resources: "{{ resources |  reject('search','minio') | list  }}"
      when: (minio.enabled != "true") or (app_secrets.cnvrg_storage_type != "minio")

    # is state present, create crds in first step
    - name: Install Kube-Prometheus CRDs
      include_role:
        name: common
        tasks_from: install
      vars:
        template_path: "{{ item }}"
        state: "{{ role_state }}"
      with_fileglob:
        - templates/kube-prom/setup/*
      when: role_state == "present"

    - name: Install Kube-Prometheus resources
      include_role:
        name: common
        tasks_from: install
      vars:
        template_path: "{{ item }}"
        state: "{{ role_state }}"
      loop: "{{resources}}"
      when: role_state == "present"

    - name: Get Prometheus
      k8s_info:
        api_version: monitoring.coreos.com/v1
        kind: Prometheus
        namespace: "{{ ansible_operator_meta.namespace }}"
      register: prometheus_instance
      when:
      - dry_run == "false"
      - role_state == "absent"

    - name: Print Prometheus instance
      debug:
        msg: "Current Prometheus instances: {{ prometheus_instance.resources }}"
      when:
      - dry_run == "false"
      - role_state == "absent"

    - name: Remove Kube-Prometheus resources
      include_role:
        name: common
        tasks_from: install
      vars:
        template_path: "{{ item }}"
        state: "{{ role_state }}"
      loop: "{{resources}}"
      when:
      - role_state == "absent"
      - prometheus_instance.resources | length > 0

    # is state absent, remove crds in last step
    - name: Remove Kube-Prometheus CRDs
      include_role:
        name: common
        tasks_from: install
      vars:
        template_path: "{{ item }}"
        state: "{{ role_state }}"
      with_fileglob:
        - templates/kube-prom/setup/*
      when: state == "absent"