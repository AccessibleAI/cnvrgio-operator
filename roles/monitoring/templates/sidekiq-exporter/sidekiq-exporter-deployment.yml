
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sidekiq-prometheus-exporter
  namespace: "{{ansible_operator_meta.namespace}}"
  labels:
    app.kubernetes.io/name: sidekiq-prometheus-exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sidekiq-prometheus-exporter
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sidekiq-prometheus-exporter
    spec:
      imagePullSecrets:
        - name: {{ cnvrgApp.conf.registry.name }}
      {% if tenancy.enabled == "true" %}
      nodeSelector:
        {{ tenancy.cnvrg.key }}: "{{ tenancy.cnvrg.value }}"
      {%  endif %}
      {% if tenancy.enabled == "true" and tenancy.dedicatedNodes == "true" %}
      tolerations:
        - key: "{{ tenancy.cnvrg.key }}"
          operator: "Equal"
          value: "{{ tenancy.cnvrg.value }}"
          effect: "NoSchedule"
      {% endif %}
      containers:
        - name: sidekiq-prometheus-exporter
          image: {{ monitoring.sidekiqExporter.image }}
          imagePullPolicy: IfNotPresent
          ports:
            - name: metrics
              containerPort: 9292
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: metrics
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            tcpSocket:
              port: metrics
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          envFrom:
            - configMapRef:
                name: env-config
      serviceAccountName: sidekiq-prometheus-exporter