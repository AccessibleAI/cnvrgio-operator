
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  labels:
    app: prometheus
    prometheus: cnvrg
  name: cnvrg
  namespace: "{{ansible_operator_meta.namespace}}"
spec:
  storage:
    disableMountSubPath: true
    volumeClaimTemplate:
      spec:
        resources:
          requests:
            storage: "{{ monitoring.prometheus.storageSize }}"
        {% if monitoring.prometheus.storageClass != "use-default" %}
        storageClassName: "{{ monitoring.prometheus.storageClass }}"
        {% elif storage.ccpStorageClass != "" %}
        storageClassName: "{{ storage.ccpStorageClass }}"
        {% endif %}
  image: "{{ monitoring.prometheus.image }}"
  {% if tenancy.enabled == "true" and tenancy.dedicatedNodes == "true" %}
  tolerations:
    - key: "{{ tenancy.cnvrg.key }}"
      operator: "Equal"
      value: "{{ tenancy.cnvrg.value }}"
      effect: "NoSchedule"
  {% endif %}
  {% if storage.hostpath.enabled == "true" and tenancy.enabled == "false" %}
  nodeSelector:
    kubernetes.io/hostname: "{{ storage.hostpath.nodeName }}"
  {% elif storage.hostpath.enabled == "false" and tenancy.enabled == "true" %}
  nodeSelector:
    {{ tenancy.cnvrg.key }}: "{{ tenancy.cnvrg.value }}"
  {% elif storage.hostpath.enabled == "true" and tenancy.enabled == "true" %}
  nodeSelector:
    kubernetes.io/hostname: "{{ storage.hostpath.nodeName }}"
    {{ tenancy.cnvrg.key }}: "{{ tenancy.cnvrg.value }}"
  {% endif %}
  podMonitorNamespaceSelector: {}
  podMonitorSelector: {}
  replicas: 1
  retentionSize: "{{ monitoring.prometheus.storageSize|regex_replace('[a-zA-Z]', '')|int - 2 }}GiB" # https://www.robustperception.io/configuring-prometheus-storage-retention
  resources:
    requests:
      cpu: "{{ monitoring.prometheus.cpuRequest | default('1') }}"
      memory: "{{ monitoring.prometheus.memoryRequest | default('1Gi') }}"
  externalLabels:
    cnvrg_cluster: "{{ clusterDomain }}"
  ruleSelector:
    matchLabels:
      prometheus: k8s
      role: alert-rules
  securityContext:
    fsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: prometheus-k8s
  serviceMonitorNamespaceSelector: {}
  serviceMonitorSelector: {}
  version: v2.20.0
