apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
  namespace: "{{ansible_operator_meta.namespace}}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      {% if tenancy.enabled == "true" %}
      nodeSelector:
        {{ tenancy.cnvrg.key }}: "{{ tenancy.cnvrg.value }}"
      {% endif %}
      {% if tenancy.enabled == "true" and tenancy.dedicatedNodes == "true" %}
      tolerations:
      - key: "{{ tenancy.cnvrg.key }}"
        operator: "Equal"
        value: "{{ tenancy.cnvrg.value }}"
        effect: "NoSchedule"
       {% endif %}
      containers:
      {% if oauthProxy.enabled == "true" %}
      - name: "cnvrg-oauth-proxy"
        image: "{{ oauthProxy.image }}"
        command: [ "oauth2-proxy","--config", "/tmp/conf" ]
        volumeMounts:
          - name: "oauth-proxy-config-grafana"
            mountPath: "/tmp"
            readOnly: true
      {% endif %}
      - env:
        - name: GF_AUTH_BASIC_ENABLED
          value: "false"
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ORG_ROLE
          value: Admin
        - name: GF_SECURITY_ALLOW_EMBEDDING
          value: "true"
        image: {{ monitoring.grafana.image }}
        name: grafana
        ports:
        - containerPort:  {{ monitoring.grafana.port }}
          name: http
        readinessProbe:
          httpGet:
            path: /api/health
            port: http
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-storage
          readOnly: false
        - mountPath: /etc/grafana/provisioning/datasources
          name: grafana-datasources
          readOnly: false
        - mountPath: /etc/grafana/provisioning/dashboards
          name: grafana-dashboards
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/0/apiserver
          name: grafana-dashboard-apiserver
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/0/cluster-total
          name: grafana-dashboard-cluster-total
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/0/controller-manager
          name: grafana-dashboard-controller-manager
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/0/k8s-resources-cluster
          name: grafana-dashboard-k8s-resources-cluster
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/0/k8s-resources-namespace
          name: grafana-dashboard-k8s-resources-namespace
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/0/k8s-resources-node
          name: grafana-dashboard-k8s-resources-node
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/0/k8s-resources-pod
          name: grafana-dashboard-k8s-resources-pod
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/0/k8s-resources-workload
          name: grafana-dashboard-k8s-resources-workload
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/0/k8s-resources-workloads-namespace
          name: grafana-dashboard-k8s-resources-workloads-namespace
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/0/kubelet
          name: grafana-dashboard-kubelet
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/0/namespace-by-pod
          name: grafana-dashboard-namespace-by-pod
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/0/namespace-by-workload
          name: grafana-dashboard-namespace-by-workload
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/0/node-cluster-rsrc-use
          name: grafana-dashboard-node-cluster-rsrc-use
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/0/node-rsrc-use
          name: grafana-dashboard-node-rsrc-use
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/0/nodes
          name: grafana-dashboard-nodes
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/0/persistentvolumesusage
          name: grafana-dashboard-persistentvolumesusage
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/0/pod-total
          name: grafana-dashboard-pod-total
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/0/prometheus-remote-write
          name: grafana-dashboard-prometheus-remote-write
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/0/prometheus
          name: grafana-dashboard-prometheus
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/0/proxy
          name: grafana-dashboard-proxy
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/0/scheduler
          name: grafana-dashboard-scheduler
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/0/statefulset
          name: grafana-dashboard-statefulset
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/0/workload-total
          name: grafana-dashboard-workload-total
          readOnly: false
        {% if monitoring.sidekiqExporter.enabled == "true" and cnvrgApp.enabled == "true" %}
        - mountPath: /grafana-dashboard-definitions/0/sidekiq-exporter
          name: grafana-dashboard-cnvrg-sidekiq-exporter
          readOnly: false
        {% endif %}
        {% if (monitoring.minioExporter.enabled == "true") and (minio.enabled == "true") and (cnvrgApp.conf.cnvrgStorageType == "minio") %}
        - mountPath: /grafana-dashboard-definitions/0/minio-exporter
          name: grafana-dashboard-cnvrg-minio-exporter
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/0/minio-exporter2
          name: grafana-dashboard-cnvrg-minio-exporter2
          readOnly: false
        {% endif %}
        {% if vpa.enabled == "true" %}
        - mountPath: /grafana-dashboard-definitions/0/vpa-dashboard
          name: vpa-dashboard
          readOnly: false
        {% endif %}
        {% if monitoring.nodeExporter.enabled == "true" %}
        - mountPath: /grafana-dashboard-definitions/0/node-exporter-full
          name: node-exporter-full
          readOnly: false
        {% endif %}
        {% if monitoring.dcgmExporter.enabled == "true" %}
        - mountPath: /grafana-dashboard-definitions/0/dcgm-exporter
          name: dcgm-exporter-dashboard
          readOnly: false
        {% endif %}
        {% if monitoring.idleMetricsExporter.enabled == "true" %}
        - mountPath: /grafana-dashboard-definitions/0/idle-exporter
          name: grafana-idle-metrics
          readOnly: false
        {% endif %}
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: grafana
      volumes:
      - emptyDir: {}
        name: grafana-storage
      - name: grafana-datasources
        secret:
          secretName: grafana-datasources
      - configMap:
          name: grafana-dashboards
        name: grafana-dashboards
      - configMap:
          name: grafana-dashboard-apiserver
        name: grafana-dashboard-apiserver
      - configMap:
          name: grafana-dashboard-cluster-total
        name: grafana-dashboard-cluster-total
      - configMap:
          name: grafana-dashboard-controller-manager
        name: grafana-dashboard-controller-manager
      - configMap:
          name: grafana-dashboard-k8s-resources-cluster
        name: grafana-dashboard-k8s-resources-cluster
      - configMap:
          name: grafana-dashboard-k8s-resources-namespace
        name: grafana-dashboard-k8s-resources-namespace
      - configMap:
          name: grafana-dashboard-k8s-resources-node
        name: grafana-dashboard-k8s-resources-node
      - configMap:
          name: grafana-dashboard-k8s-resources-pod
        name: grafana-dashboard-k8s-resources-pod
      - configMap:
          name: grafana-dashboard-k8s-resources-workload
        name: grafana-dashboard-k8s-resources-workload
      - configMap:
          name: grafana-dashboard-k8s-resources-workloads-namespace
        name: grafana-dashboard-k8s-resources-workloads-namespace
      - configMap:
          name: grafana-dashboard-kubelet
        name: grafana-dashboard-kubelet
      - configMap:
          name: grafana-dashboard-namespace-by-pod
        name: grafana-dashboard-namespace-by-pod
      - configMap:
          name: grafana-dashboard-namespace-by-workload
        name: grafana-dashboard-namespace-by-workload
      - configMap:
          name: grafana-dashboard-node-cluster-rsrc-use
        name: grafana-dashboard-node-cluster-rsrc-use
      - configMap:
          name: grafana-dashboard-node-rsrc-use
        name: grafana-dashboard-node-rsrc-use
      - configMap:
          name: grafana-dashboard-nodes
        name: grafana-dashboard-nodes
      - configMap:
          name: grafana-dashboard-persistentvolumesusage
        name: grafana-dashboard-persistentvolumesusage
      - configMap:
          name: grafana-dashboard-pod-total
        name: grafana-dashboard-pod-total
      - configMap:
          name: grafana-dashboard-prometheus-remote-write
        name: grafana-dashboard-prometheus-remote-write
      - configMap:
          name: grafana-dashboard-prometheus
        name: grafana-dashboard-prometheus
      - configMap:
          name: grafana-dashboard-proxy
        name: grafana-dashboard-proxy
      - configMap:
          name: grafana-dashboard-scheduler
        name: grafana-dashboard-scheduler
      - configMap:
          name: grafana-dashboard-statefulset
        name: grafana-dashboard-statefulset
      - configMap:
          name: grafana-dashboard-workload-total
        name: grafana-dashboard-workload-total
      {% if monitoring.sidekiqExporter.enabled == "true" and cnvrgApp.enabled == "true" %}
      - configMap:
          name: grafana-dashboard-cnvrg-sidekiq-exporter
        name: grafana-dashboard-cnvrg-sidekiq-exporter
      {% endif %}
      {% if (monitoring.minioExporter.enabled == "true") and (minio.enabled == "true") and (cnvrgApp.conf.cnvrgStorageType == "minio") %}
      - configMap:
          name: grafana-dashboard-cnvrg-minio-exporter
        name: grafana-dashboard-cnvrg-minio-exporter
      - configMap:
          name: grafana-dashboard-cnvrg-minio-exporter2
        name: grafana-dashboard-cnvrg-minio-exporter2
      {% endif %}
      {% if monitoring.nodeExporter.enabled == "true" %}
      - configMap:
          name: node-exporter-full
        name: node-exporter-full
      {% endif %}
      {% if vpa.enabled == "true" %}
      - configMap:
          name: vpa-dashboard
        name: vpa-dashboard
      {% endif %}
      {% if monitoring.dcgmExporter.enabled == "true" %}
      - configMap:
          name: dcgm-exporter-dashboard
        name: dcgm-exporter-dashboard
      {% endif %}
      {% if monitoring.idleMetricsExporter.enabled == "true" %}
      - configMap:
          name: grafana-idle-metrics
        name: grafana-idle-metrics
      {% endif %}
      {% if oauthProxy.enabled == "true" %}
      - configMap:
          name: oauth-proxy-config-grafana
        name: oauth-proxy-config-grafana
      {% endif %}