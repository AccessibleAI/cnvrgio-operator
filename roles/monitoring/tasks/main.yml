- name: Deploy Prometheus operator
  include_role:
    name: common
    tasks_from: install
  vars:
    templatePath: "{{ item }}"
    state: "present"
  with_fileglob:
    - templates/prometheus-operator/*
  when:
    - monitoring.enabled == "true"
    - monitoring.prometheusOperator.enabled == "true"

- name: Deploy Default Service Monitors
  include_role:
    name: common
    tasks_from: install
  vars:
    templatePath: "{{ item }}"
    state: "present"
  with_fileglob:
    - templates/default-service-monitors/*
  when:
    - monitoring.enabled == "true"
    - monitoring.defaultServiceMonitors.enabled == "true"

- name: Deploy Node Exporter
  include_role:
    name: common
    tasks_from: install
  vars:
    templatePath: "{{ item }}"
    state: "present"
  with_fileglob:
    - templates/node-exporter/*
  when:
    - monitoring.enabled == "true"
    - monitoring.nodeExporter.enabled == "true"

- name: Deploy Prometheus Kube State Metrics
  include_role:
    name: common
    tasks_from: install
  vars:
    templatePath: "{{ item }}"
    state: "present"
  with_fileglob:
    - templates/kube-state-metrics/*
  when:
    - monitoring.enabled == "true"
    - monitoring.kubeStateMetrics.enabled == "true"

- name: Deploy Prometheus instance
  include_role:
    name: common
    tasks_from: install
  vars:
    templatePath: "{{ item }}"
    state: "present"
  with_fileglob:
    - templates/prometheus/*
  when:
    - monitoring.enabled == "true"
    - monitoring.prometheus.enabled == "true"

- name: Deploy Minio Exporter
  include_role:
    name: common
    tasks_from: install
  vars:
    templatePath: "{{ item }}"
    state: "present"
  with_fileglob:
    - templates/minio-exporter/*
  when:
    - monitoring.enabled == "true"
    - (minio.enabled == "true") and (cnvrgApp.conf.cnvrgStorageType == "minio")
    - monitoring.minioExporter.enabled == "true"

- name: Deploy Sidekiq Exporter
  include_role:
    name: common
    tasks_from: install
  vars:
    templatePath: "{{ item }}"
    state: "present"
  with_fileglob:
    - templates/sidekiq-exporter/*
  when:
    - monitoring.enabled == "true"
    - monitoring.sidekiq_exporter.enabled == "true"
    - cnvrgApp.enabled == "true"

- name: Deploy DCGM Exporter
  include_role:
    name: common
    tasks_from: install
  vars:
    templatePath: "{{ item }}"
    state: "present"
  with_fileglob:
    - templates/dcgm-exporter/*
  when:
    - monitoring.enabled == "true"
    - monitoring.dcgmExporter.enabled == "true"

- name: Deploy Idle Metrics Exporter
  include_role:
    name: common
    tasks_from: install
  vars:
    templatePath: "{{ item }}"
    state: "present"
  with_fileglob:
    - templates/idle-metrics-exporter/*
  when:
    - monitoring.enabled == "true"
    - monitoring.idleMetricsExporter.enabled == "true"

- name: Deploy External Dashboards
  include_role:
    name: common
    tasks_from: install
  vars:
    templatePath: "{{ item }}"
    state: "present"
  with_fileglob:
    - templates/external-dashboards/*
  when:
    - monitoring.enabled == "true"
    - monitoring.grafana.enabled == "true"

- name: Deploy Grafana
  include_role:
    name: common
    tasks_from: install
  vars:
    templatePath: "{{ item }}"
    state: "present"
  with_fileglob:
    - templates/grafana/*.yml
  when:
    - monitoring.enabled == "true"
    - monitoring.grafana.enabled == "true"

- name: "Get Metrics Server Deployment"
  k8s_info:
    kind: Deployment
    namespace: "kube-system"
    name: "metrics-server"
  register: metricsServer

- name: Deploy Metrics Server
  include_role:
    name: common
    tasks_from: install
  vars:
    templatePath: "{{ item }}"
    state: "present"
  with_fileglob:
    - templates/metrics-server/*
  when:
    - monitoring.enabled == "true"
    - monitoring.metricsServer.enabled == "true"
    - metricsServer.resources | length == 0
