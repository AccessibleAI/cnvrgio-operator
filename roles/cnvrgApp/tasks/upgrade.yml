- name: Set status
  operator_sdk.util.k8s_status:
    api_version: mlops.cnvrg.io/v1
    kind: CnvrgAppUpgrade
    name: cnvrg-app-upgrade
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      status: "running"
      message: "getting cnvrgapp"

- name: Get CnvrgApp
  community.kubernetes.k8s_info:
    api_version: v1
    kind: CnvrgApp
    namespace: "{{ ansible_operator_meta.namespace }}"
    name: "{{ cnvrgAppUpgrade.cnvrgAppName }}"
  register: resourcesCnvrg

- name: set cnvrgAppObject
  set_fact:
    cnvrgAppObject: "{{ resourcesCnvrg.resources[0] }}"
  when: resourcesCnvrg.resources|length > 0

- name: fail if spec not found
  block:
  - name: Set status
    operator_sdk.util.k8s_status:
      api_version: mlops.cnvrg.io/v1
      kind: CnvrgAppUpgrade
      name: cnvrg-app-upgrade
      namespace: "{{ ansible_operator_meta.namespace }}"
      status:
        status: "error"
        message: "cnvrgapp not found can't upgrade"
  - fail:
      msg: "cnvrgapp not found can't upgrade"
  when: cnvrgAppObject is undefined

- name: run upgrade
  block:

  - name: bind cnvrg spec vars to global scope
    include_role:
      name: common
      tasks_from: bind_vars
    vars:
      key: "{{ item.key }}"
      value: "{{ item.value }}"
    with_dict: "{{ cnvrgAppObject.spec }}"

  - name: update status
    operator_sdk.util.k8s_status:
      api_version: mlops.cnvrg.io/v1
      kind: CnvrgAppUpgrade
      name: cnvrg-app-upgrade
      namespace: "{{ ansible_operator_meta.namespace }}"
      status:
        status: "backup cnvrgapp"

  - name: Backup CnvrgApp
    operator_sdk.util.k8s_status:
      api_version: mlops.cnvrg.io/v1
      kind: CnvrgAppUpgrade
      name: cnvrg-app-upgrade
      namespace: "{{ ansible_operator_meta.namespace }}"
      status:
        cnvrgBackup:
          cnvrgAppSepc: "{{ cnvrgAppObject.spec }}"
    when:
    - _mlops_cnvrg_io_cnvrgappupgrade.status.cnvrgBackup is undefined


  - name: Set status
    operator_sdk.util.k8s_status:
      api_version: mlops.cnvrg.io/v1
      kind: CnvrgAppUpgrade
      name: cnvrg-app-upgrade
      namespace: "{{ ansible_operator_meta.namespace }}"
      status:
        status: "caching app image"

  - name: Create app image caching ds
    include_role:
      name: common
      tasks_from: install
    vars:
      templatePath: "templates/upgrade/cache-image-ds.yml"
      state: "present"
      waitToComplete: yes


  - name: wait for image cache ds to come up
    shell: |
      kubectl get daemonset "{{ cnvrgAppUpgrade.cacheDsName }}" -n"{{ ansible_operator_meta.namespace }}" -ojson | jq -r .status
    register: dsStatus
    until: (dsStatus.stdout|from_json).desiredNumberScheduled == (dsStatus.stdout|from_json).currentNumberScheduled
    retries: 3600
    delay: 5

  - name: Set status
    operator_sdk.util.k8s_status:
      api_version: mlops.cnvrg.io/v1
      kind: CnvrgAppUpgrade
      name: cnvrg-app-upgrade
      namespace: "{{ ansible_operator_meta.namespace }}"
      status:
        status: "scale to 0 sedekiqs, set resourcesRequestEnabled to false"

  - name: scale to 0 sedekiqs and disable resources requests
    set_fact:
      cnvrgAppObject: "{{ cnvrgAppObject|combine({'spec': {'tags':'cnvrgApp','cnvrgApp': {'sidekiqReplicas': '0','sidekiqSearchkickReplicas':'0','resourcesRequestEnabled':'false'}}}, recursive=True) }}"

  - name: update CnvrgApp
    k8s:
      state: "present"
      definition: "{{ cnvrgAppObject }}"
      wait: "yes"

  when: cnvrgAppObject is not undefined
