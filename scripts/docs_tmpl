# cnvrg.io operator
## Deploy cnvrg stack on EKS | AKS | GKE | OpenShift* | On-Premise clusters with K8S operator

### Quick start

#### Prerequisite
1. Install [helm3](https://helm.sh/docs/intro/install/#from-script)
2. Add cnvrg helm repo
   ```bash
   helm repo add cnvrg https://charts.cnvrg.io
   helm repo update
   helm search repo cnvrg -l
   ```

#### Deploy with defaults (Istio, Minio)
```bash
helm install cnvrg cnvrg/cnvrg -n cnvrg --create-namespace --timeout 1500s  --wait \
    --set clusterDomain=base.domain
```

### Upgrade with helm upgrade
```
helm upgrade cnvrg cnvrg/cnvrg -n cnvrg --reuse-values \
  --set cnvrgApp.image=cnvrg/app:master-1374-encode
```

### Uninstall cnvrg
```
# Uninstall cnvrg.io control plan
helm uninstall cnvrg -n cnvrg
```

### Install without Helm (raw k8s manifests)
```
kubectl create namespace cnvrg
helm template cnvrg cnvrg/cnvrg --no-hooks --set clusterDomain=base.domain > cnvrg.yaml # ... add extra params if required
kubectl apply -f cnvrg.yaml
```

### Dump only the CnvrgApp Custom Resource
```
helm template cnvrg cnvrg/cnvrg  -s templates/cnvrg-app.yaml
```


### Examples

#### Deploy on EKS | AKS | GKE with  (Istio, Cloud Object Storage)
```bash
# AWS - EKS
helm install cnvrg cnvrg/cnvrg -n cnvrg --create-namespace --timeout 1500s --wait \
        --set clusterDomain=base.domain \
        --set cnvrgApp.image=cnvrg/app:enterprise-3.1.2 \
        --set cnvrgApp.conf.registry.user=cnvrg-license-username \
        --set cnvrgApp.conf.registry.password=cnvrg-license-password \
        --set cnvrgApp.conf.cnvrgStorageType=aws \
        --set cnvrgApp.conf.cnvrgStorageBucket=s3bucket-name \
        --set cnvrgApp.conf.cnvrgStorageAccessKey=ACCESSKEY \
        --set cnvrgApp.conf.cnvrgStorageSecretKey=SECRETKEY \
        --set cnvrgApp.conf.cnvrgStorageRegion=aws-region


# Azure - AKS
helm install cnvrg cnvrg/cnvrg -n cnvrg --create-namespace --timeout 1500s --wait \
        --set clusterDomain=base.domain \
        --set cnvrgApp.image=cnvrg/app:enterprise-3.1.2 \
        --set cnvrgApp.conf.registry.user=cnvrg-license-username \
        --set cnvrgApp.conf.registry.password=cnvrg-license-password \
        --set cnvrgApp.conf.cnvrgStorageType=azure \
        --set cnvrgApp.conf.cnvrgStorageAzureAccessKey=azure-storage-account-access-key \
        --set cnvrgApp.conf.cnvrgStorageAzureAccountName=azure-storage-account-name \
        --set cnvrgApp.conf.cnvrgStorageAzureContainer=azure-storage-container-name

# GCP - GKE
helm install cnvrg cnvrg/cnvrg -n cnvrg --create-namespace --timeout 1500s --wait \
        --set clusterDomain=base.domain \
        --set cnvrgApp.image=cnvrg/app:enterprise-3.1.2 \
        --set cnvrgApp.conf.registry.user=cnvrg-license-username \
        --set cnvrgApp.conf.registry.password=cnvrg-license-password \
        --set cnvrgApp.conf.cnvrgStorageType=gcp \
        --set cnvrgApp.conf.cnvrgStorageProject=gcp-storage-project
```

#### Deploy OnPrem  (Istio, Minio, HostPath, SMTP, micro storage profile)
```bash
helm install cnvrg cnvrg/cnvrg -n cnvrg --create-namespace --timeout 1500s --wait \
    --set clusterDomain=apps.1.2.3.4.nip.io \
    --set storage.enabled="true" \
    --set storage.hostpath.enabled="true" \
    --set storage.hostpath.nodeName="k8s-node-name" \
    --set cnvrgApp.conf.smtp.server="smtp-server" \
    --set cnvrgApp.conf.smtp.port="smtp-port" \
    --set cnvrgApp.conf.smtp.username="smtp-user" \
    --set cnvrgApp.conf.smtp.password="smtp-pass" \
    --set cnvrgApp.conf.smtp.domain="domain"
```

#### Deploy OnPrem  (NodePort, Minio, NFS)
```bash
helm install cnvrg cnvrg/cnvrg -n cnvrg --create-namespace --timeout 1500s --wait \
    --set clusterDomain=192.168.1.2 \
    --set networking.ingressType="nodeport" \
    --set storage.nfs.enabled="true" \
    --set storage.nfs.server="storage.nfs.SERVER.IP" \
    --set storage.nfs.path="/shared/nfs/directory"
```

#### Deploy OnPrem  (NodePort, Minio, Hostpath)
```bash
helm install cnvrg cnvrg/cnvrg -n cnvrg --create-namespace --timeout 1500s --wait \
    --set clusterDomain=<node-ip> \
    --set networking.ingressType="nodeport" \
    --set storage.hostpath.enabled="true" \
    --set storage.hostpath.nodeName="<k8s-node>"
```

#### Turn On/Off components
```
helm install cnvrg cnvrg/cnvrg -n cnvrg --create-namespace --timeout 1500s --wait \
    --set cnvrgApp.enabled="false" \
    --set logging.enabled="false" \
    --set storage.enabled="false" \
    --set networking.enabled="false" \
    --set minio.enabled="false" \
    --set mpi.enabled="false" \
    --set nvidiadp.enabled="false" \
    --set pg.enabled="false" \
    --set redis.enabled="false"
```

__DUMP__ALL__PARAMS_HERE__